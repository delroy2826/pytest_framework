#****************************************TEST_SUITE test_userdata_api.py***********************************************
#test_TC_1_API
# Verify Total count and status code
# Step1 : Method: GET Endpoint url "/user"
# Step2 : Get Total count
# Step3 : Verify status code to 200
# Step4 : Verify Total Count
#       Expected Count : 102

#test_TC_2_API
# Get List of Users with page limit as 50 and print 'firstName'
# Step1 : Method: GET Endpoint url "/user"
# Step2 : Params {'limit': 50}
# Step3 : Verify status code to 200
# Step4 : print all firstName

#test_TC_3_API
# Update lastName of user id "643fbe62ea551e4225736c32" and verify 'lastName' is updated
# Step1: Method: PUT Endpoint url "/user/{user_id}"
# Step2 : Payload { "lastName": "Oliveira"}
# Step3 : Verify status code to 200
# Step4 : Verify in Response 'lastName' is 'Oliveira'

#test_TC_4_API
# Get user detail by user id "643fbe62ea551e4225736c32"
# Step1: Method: GET Endpoint url "/user/{user_id}"
# Step2 : Verify status code to 200
# Step3 : Print repsonse data

#test_TC_5_API
# Create User and Delete the created user
# Step1: Method: POST   Endpoint url "/user/create"
# Step2: Payload:
# {"firstName":"Delroy", "lastName":"DelDete", "email":"DelroyDedslete@gmail.com" }
# Step3: Verify Status code to 200
# Step4: Get User ID
# Step5: Method: DELETE Endpoint URL "/user/{{delete_user_id}}"
# Verify User ID in response
# Verify Status 200

#****************************************TEST_SUITE test_postdata_api.py***********************************************
#test_TC_1_API
#Get List of post text and likes
# Step1 : Method: GET Endpoint url "/post"
# Step2 : param {"limit":50}
# step3 : Verify Status code to 200
# step4 : print all the "text" and "likes" from the response

#test_TC_2_API
#Get List of post by user id "60d0fe4f5311236168a109ca"
# Step1 : Method: GET Endpoint url "/user/{{user_id_post}}/post"
# step2 : Verify Status code to 200
# step3 : print all the "text" and "likes" from the response along with user id verification

#test_TC_3_API
# Get post by post id "60d21b4667d0d8992e610c85"
#Step1 : Method: GET Endpoint url "/post/{{post_id}}"
#Step2: Verify Status code to 200
# Spte3: print text,likes, tags, firstName, lastName and verify post id from response

#test_TC_4_API
# A)
#Create Post , Update Post, Verify post by id,Verify post by user,delete the post
#pre-requisite data:
# update_user_id =  643fbe62ea551e4225736c32
# text = New Post Created
# likes = 50
# tags = [
#         "Flower",
#         "Blue Flower",
#         "Butterfly"
#     ]
#
# Step1: Method : Post Endpoint url "/post/create"
# Step2: Create Post Payload
# {
#     "text": "New Post Created",
#     "image": "https://images.pexels.com/photos/326055/pexels-photo-326055.jpeg",
#     "likes": 0,
#     "tags": [],
#     "owner": "{{update_user_id}}"
# }
# Step3: Verify Status Code 200
# Step4: Verify Text, updated_user_id, tags, likes

# B)
# Update Post
#pre-requisite data:
# new_post_id : Extracted from Create Post response
# text =  New Post Updated
# likes = 5
# Step5 :  Method : PUT   Enpoint url: /post/{{new_post_id}}
# Step6 : Update Post Payload
# {
#     "text":"Life of Butterfly",
#     "likes": 5
# }
#Step 7: Verify Status Code 200
#Step 8: Verify Text, updated_user_id, likes

# C)
#pre-requisite data:
# new_post_id : Extracted from Create Post response
# Step 9: Method: GET Endpoint url: /post/{{new_post_id}}
# Step 10: Verify Text, updated_user_id, likes, post id

# D)
#pre-requisite data:
# new_post_id : Extracted from Create Post response
# Step 11: Method: DELETE Endpoint url: /post/{{new_post_id}}
# Step 12 : Verify Status code 200
# Step 13 : Verify id

#****************************************TEST_SUITE test_commentdata_api.py***********************************************
#test_TC_1_API
# Get List of Comments
# Step 1: Method: GET Endpoint URL: /comment
# Step 2: Verify Status code 200
# Step 3: Display title, firstName, lastName, message
#
#test_TC_2_API
#pre-requisite
# post_comment_id = "60d21b7967d0d8992e610d1b"
# Get Comments for Post by POST ID
# Step 1: Method: GET   Endpoint URL: /post/{{post_comment_id}}/comment
# Step 2: Verify Status code 200
# Step 3: Display title, firstName, lastName, message and Verify post id
#
#test_TC_3_API
#pre-requisite
# user_id_post = "60d0fe4f5311236168a109ca"
# Get Comments for Post by user ID
# Step 1: Method: GET   Endpoint URL: /user/{{user_id_post}}/comment
# Step 2: Verify Status code 200
# Step 3: Display title, firstName, lastName, message and Verify user id

#test_TC_4_API
# user_id_post = "60d0fe4f5311236168a109ca"
# post_comment_id = "60d21b7967d0d8992e610d1b"
# message = "Nice picture"
# A
#Create Comment , Verify the comment for the post, delete the comment
# Step 1: Method : POST     Endpoint URL: /comment/create
# Step 2 : Create Comment Payload
# {
#     "message": "Nice Picture Test",
#     "owner": "{{user_id_post}}",
#     "post": "{{post_id_for_comment}}"
# }
# Step 3: Verify message
# B
# Step 4: Method : DELETE   Endpoint URL: /comment/{{new_comment_id}}
# Step 5: Verify response id